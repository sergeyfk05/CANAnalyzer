<UserControl x:Class="CANAnalyzer.Pages.BomberPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CANAnalyzer.Pages"
             xmlns:resources="clr-namespace:CANAnalyzer.Resources.DynamicResources"
             xmlns:controls="clr-namespace:CANAnalyzer.Resources.UIControls"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
             xmlns:vm="clr-namespace:CANAnalyzer.VM"
             xmlns:states="clr-namespace:CANAnalyzer.Models.States"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Resources/CommonStyles/TransmitToComboBoxStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Resources/CommonStyles/CommonStyles.xaml"/>


                <ResourceDictionary>
                    <system:Double x:Key="StandartControlHeight">26</system:Double>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="10">

        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0" 
                   Height="36"
                   VerticalAlignment="Center" 
                   HorizontalAlignment="Stretch">


            <Border Background="Aqua"
                    DockPanel.Dock="Left"
                    Height="36"
                    CornerRadius="4"
                    BorderThickness="0">
                <Border.Effect>
                    <DropShadowEffect Color="Red" Opacity="0.8" ShadowDepth="2"/>
                </Border.Effect>

                <DockPanel DockPanel.Dock="Left"
                           Height="30"
                           VerticalAlignment="Center">


                    <Button x:Name="closeButton" 
                                DockPanel.Dock="Left" 
                                Style="{DynamicResource ShortcutButtonStyle}"
                                Command="{Binding ClosePageCommand}">
                        <Image Style="{DynamicResource ShortcutButtonImageStyle}" 
                       Source="{resources:Theme TransmitPageCloseButtonIcon}"/>

                        <Button.ToolTip>
                            <ToolTip Content="{resources:Language #TransmitPageCloseButtonToolTip}"/>
                        </Button.ToolTip>
                    </Button>

                </DockPanel>

            </Border>



            <ComboBox x:Name="TransmiToComboBox" 
                      ItemsSource="{Binding TransmitToItems}"
                      Style="{StaticResource TransmitToComboBoxStyle}"
                          Height="30" DockPanel.Dock="Right" MinWidth="200" VerticalAlignment="Center">

            </ComboBox>

            <!--This TextBlock need for fix ComboBox dockpanel's position-->
            <TextBlock Width="0" DockPanel.Dock="Right"/>

        </DockPanel>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>


            <StackPanel Orientation="Vertical" Grid.RowSpan="3" Grid.Column="0" VerticalAlignment="Bottom">
                <TextBlock Text="ID:"/>
                <controls:HexTextBox x:Name="CanIdTextBox" Height="{StaticResource StandartControlHeight}" Value="{Binding CanId, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" NullStrValue="0x7ff" VerticalContentAlignment="Center" HorizontalContentAlignment="Right" HorizontalAlignment="Left">
                    <controls:HexTextBox.Style>
                        <Style TargetType="controls:HexTextBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsExtId}" Value="True">
                                    <Setter Property="MaxValue" Value="0x1FFFFFFF"/>
                                    <Setter Property="Width" Value="55"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsExtId}" Value="False">
                                    <Setter Property="MaxValue" Value="0x7FF"/>
                                    <Setter Property="Width" Value="25"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Status}" Value="{x:Static states:TransmitState.Transmiting}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </controls:HexTextBox.Style>
                </controls:HexTextBox>
            </StackPanel>
            <CheckBox Content="isExtId" Grid.Row="5" Grid.ColumnSpan="5" IsChecked="{Binding IsExtId}">
                <CheckBox.Style>
                    <Style TargetType="CheckBox">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Status}" Value="{x:Static states:TransmitState.Transmiting}">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </CheckBox.Style>
            </CheckBox>


            <StackPanel Orientation="Vertical" Grid.RowSpan="3" Grid.Column="2" VerticalAlignment="Bottom">
                <TextBlock Text="DLC"/>
                <controls:HexTextBox MaxValue="8" NullStrValue="8" Height="{StaticResource StandartControlHeight}" Value="{Binding DLC, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                    <controls:HexTextBox.Style>
                        <Style TargetType="controls:HexTextBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Status}" Value="{x:Static states:TransmitState.Transmiting}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </controls:HexTextBox.Style>
                </controls:HexTextBox>
            </StackPanel>
            
            <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="4" VerticalAlignment="Bottom">
                <TextBlock Text="increment"/>
                <controls:HexBytesTextBox Height="{StaticResource StandartControlHeight}" Data="{Binding Increment, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" VerticalContentAlignment="Center"/>
            </StackPanel>
            
            <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="4" VerticalAlignment="Bottom">
                <TextBlock Text="value"/>
                <controls:HexBytesTextBox Height="{StaticResource StandartControlHeight}" Data="{Binding Payload, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" VerticalContentAlignment="Center">
                    <controls:HexBytesTextBox.Style>
                        <Style TargetType="controls:HexBytesTextBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Status}" Value="{x:Static states:TransmitState.Transmiting}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </controls:HexBytesTextBox.Style>
                </controls:HexBytesTextBox>
            </StackPanel>

            <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="6" VerticalAlignment="Bottom">
                <TextBlock Text="msg per step"/>
                <controls:NumericTextBox Value="{Binding MsgPerStep, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" NullStrValue="1" Height="{StaticResource StandartControlHeight}" MaxValue="100" VerticalContentAlignment="Center" HorizontalContentAlignment="Right">
                    <controls:NumericTextBox.Style>
                        <Style TargetType="controls:NumericTextBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Status}" Value="{x:Static states:TransmitState.Transmiting}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </controls:NumericTextBox.Style>
                </controls:NumericTextBox>
            </StackPanel>

            <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="6" VerticalAlignment="Bottom">
                <TextBlock Text="period"/>
                <controls:NumericTextBox Value="{Binding Period, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" NullStrValue="20" Height="{StaticResource StandartControlHeight}" MaxValue="1000" VerticalContentAlignment="Center" HorizontalContentAlignment="Right">
                    <controls:NumericTextBox.Style>
                        <Style TargetType="controls:NumericTextBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Status}" Value="{x:Static states:TransmitState.Transmiting}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </controls:NumericTextBox.Style>
                </controls:NumericTextBox>
            </StackPanel>

            <Button Content="step +" Command="{Binding StepForwardCommand}" Padding="5" Grid.Row="0" Grid.Column="8" VerticalAlignment="Bottom" Height="{StaticResource StandartControlHeight}"/>
            <Button Content="step -" Command="{Binding StepBackCommand}" Padding="5" Grid.Row="2" Grid.Column="8" VerticalAlignment="Bottom" Height="{StaticResource StandartControlHeight}"/>
            <Button Content="shot" Command="{Binding ShotCommand}" Padding="5" Grid.Row="0" Grid.Column="10" VerticalAlignment="Bottom" Height="{StaticResource StandartControlHeight}"/>
            <Button Command="{Binding RunCommand}" Padding="5" Grid.Row="2" Grid.Column="10" VerticalAlignment="Bottom" Height="{StaticResource StandartControlHeight}">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Content" Value="run"/>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Status}" Value="{x:Static states:TransmitState.Transmiting}">
                                <Setter Property="Content" Value="stop"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        
    </Grid>
</UserControl>

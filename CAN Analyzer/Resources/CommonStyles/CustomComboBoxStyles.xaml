<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CANAnalyzer.Resources.CommonStyles">


    <SolidColorBrush x:Key="BorderBrushComboBox" Color="#444" />

    <LinearGradientBrush x:Key="BackgroundBrushComboBox" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#727272" Offset="0"/>
        <GradientStop Color="#4c4c4c" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BackgroundBrushPopUpComboBox" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#727272" Offset="1"/>
        <GradientStop Color="#4c4c4c" Offset="0"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ArrowBrushComboBox" Color="#ddd" />

    <SolidColorBrush x:Key="DisabledBorderBrushComboBox" Color="#FF919191" />

    <LinearGradientBrush x:Key="DisabledBackgroundComboBox" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#f4f4f4" Offset="0"/>
        <GradientStop Color="#d7d7d7" Offset="0.7"/>
        <GradientStop Color="#c2c2c2" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledForegroundComboBox" Color="#aaaaaa" />

    <SolidColorBrush x:Key="HoverBorderBrush" Color="#aaa" />

    <LinearGradientBrush x:Key="HoverBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#da5e69" Offset="0"/>
        <GradientStop Color="#d12e27" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HoverToggleBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#676767" Offset="0"></GradientStop>
        <GradientStop Color="#474747" Offset="1"></GradientStop>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HoverItemComboBox" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#999" Offset="0"></GradientStop>
        <GradientStop Color="#666" Offset="1"></GradientStop>
    </LinearGradientBrush>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="24" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="5" Background="{StaticResource HoverToggleBackground}" 
                    BorderBrush="{StaticResource BorderBrushComboBox}" BorderThickness="1" />
            <Border x:Name="BorderToggle" Grid.Column="0" CornerRadius="3,0,0,3" Background="{StaticResource BackgroundBrushComboBox}"
                    BorderBrush="{StaticResource BorderBrushComboBox}" Margin="1" BorderThickness="0,0,1,0" />
            <Path x:Name="Arrow" Grid.Column="1" Fill="{StaticResource ArrowBrushComboBox}" HorizontalAlignment="Center" VerticalAlignment="Center"
                  Data="M -2 0 L 2 4 L 6 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverToggleBackground}" />
                <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundComboBox}" />
                <Setter TargetName="BorderToggle" Property="Background" Value="{StaticResource DisabledBackgroundComboBox}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrushComboBox}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundComboBox}"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledBorderBrushComboBox}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="FontFamily" Value="Calibri,Arial"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Foreground" Value="#ddd"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <!-- ComboBoxItem -->
                <Style TargetType="ComboBoxItem">
                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border Name="Border" Padding="2" BorderThickness="1" SnapsToDevicePixels="true">
                                    <ContentPresenter />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsHighlighted" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverItemComboBox}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundComboBox}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsVirtualizing="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="6,3,23,3" VerticalAlignment="Center"
                                          HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" 
                                 VerticalAlignment="Center" Margin="6,3,23,3" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False"
                               PopupAnimation="Slide" Margin="3,-8,-3,8">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="{StaticResource BackgroundBrushPopUpComboBox}" BorderThickness="1,1,1,1" CornerRadius="3" Margin="0,3,0,3"
                                        BorderBrush="{StaticResource BorderBrushComboBox}"/>
                                <!--***Scroll***-->
                                <ScrollViewer Margin="0,3" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundComboBox}"/>
                            <Setter Property="Background" Value="{StaticResource DisabledBackgroundComboBox}"/>
                            <Setter Property="Opacity" Value="0.72"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>





    <SolidColorBrush x:Key="NormalBrushScrollBar" Color="#ccc"/>
    <SolidColorBrush x:Key="HoverBrushScrollBar" Color="#eee"/>
    <SolidColorBrush x:Key="DisabledBrushScrollBar" Color="#aaa"/>


    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridScrollBar" Width="16">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="16"/>
                            <RowDefinition/>
                            <RowDefinition MaxHeight="16"/>
                        </Grid.RowDefinitions>
                        <RepeatButton x:Name="PageUpButton" Grid.Row="0" Command="ScrollBar.LineUpCommand" Style="{DynamicResource RepeatButtonArrowScrollBar}"/>
                        <Track x:Name="PART_Track" Grid.Row="1" Orientation="Vertical" IsDirectionReversed="True">
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource ThumbScrollBar}"/>
                            </Track.Thumb>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="DecreaseRepeatButton" Command="ScrollBar.PageUpCommand" Style="{DynamicResource RepeatButtonPageScrollBar}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="IncreaseRepeatButton" Command="ScrollBar.PageDownCommand" Style="{DynamicResource RepeatButtonPageScrollBar}"/>
                            </Track.IncreaseRepeatButton>
                        </Track>
                        <RepeatButton x:Name="PageDownButton" Grid.Row="2" Command="ScrollBar.LineDownCommand" Style="{DynamicResource RepeatButtonArrowScrollBar}">
                            <RepeatButton.LayoutTransform>
                                <RotateTransform Angle="180"/>
                            </RepeatButton.LayoutTransform>
                        </RepeatButton>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="LayoutTransform" TargetName="GridScrollBar">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical"/>
                            <Setter Property="Command" Value="ScrollBar.LineRightCommand" TargetName="IncreaseRepeatButton"/>
                            <Setter Property="Command" Value="ScrollBar.LineLeftCommand" TargetName="DecreaseRepeatButton"/>
                            <Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageDownButton"/>
                            <Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageUpButton"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonArrowScrollBar" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
        <Setter Property="Height" Value="16"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border Background="Transparent"/>
                        <Path x:Name="RepeatButtonArrow" Fill="{StaticResource NormalBrushScrollBar}" Data="M 4 12 L 12 12 L 8 4 Z"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" 
                                          Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RepeatButtonArrow" Property="Fill" Value="{StaticResource HoverBrushScrollBar}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="RepeatButtonArrow" Property="Fill" Value="#fff"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="RepeatButtonArrow" Property="Fill" Value="{StaticResource DisabledBrushScrollBar}"/>
                            <Setter TargetName="RepeatButtonArrow" Property="Opacity" Value="0.72"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ThumbScrollBar" TargetType="{x:Type Thumb}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="rect_thumb" RadiusX="4" RadiusY="4" Fill="{StaticResource NormalBrushScrollBar}" MaxWidth="8"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="rect_thumb" Property="Fill" Value="{StaticResource HoverBrushScrollBar}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="rect_thumb" Property="Fill" Value="{StaticResource DisabledBrushScrollBar}"/>
                            <Setter TargetName="rect_thumb" Property="Opacity" Value="0.72"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonPageScrollBar" TargetType="{x:Type RepeatButton}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>